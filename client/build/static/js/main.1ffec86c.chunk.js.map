{"version":3,"sources":["components/GoogleAuth/Login.js","utils/refreshToken.js","components/GoogleAuth/Logout.js","components/Nav/Nav.js","components/Dropdown/Dropdown.js","components/Input/Input.js","components/Button/Button.js","utils/API.js","utils/history.js","pages/NewRecipe.js","pages/Home.js","components/FontAwesome/FontAwesome.js","components/List/List.js","pages/GroceryList.js","pages/SavedRecipe.js","App.js","registerServiceWorker.js","index.js"],"names":["Login","clientId","buttonText","onSuccess","res","console","log","profileObj","alert","name","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","localStorage","setItem","id_token","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","style","marginTop","isSignedIn","Logout","onLogoutSuccess","NavTabs","location","useLocation","className","to","pathname","Dropdown","value","defaultText","onChange","children","disabled","hidden","DropdownOptions","InputBar","Button","onClick","text","axios","get","type","post","ingredientsArray","itemName","delete","recipeID","recipe","put","ingredient","history","NewRecipe","useState","setIngredient","recipeState","setRecipeState","pageState","setPageState","setIngredientsArray","typeSelectArray","setTypeSelectArray","first","second","dropdownState","setDropdownState","useReducer","state","action","ingredientMatch","map","item","push","unshift","ingredSelectArray","dispatch","submitFunction","event","preventDefault","target","ingredientName","previousState","new","API","then","catch","err","ingredients","recipeName","tempSelectArray","data","refreshPage","window","reload","handleSelectChange","selectIngredientArray","filter","handleInputChange","onSubmit","index","key","Input","length","Object","keys","Home","props","BorderStar","pointerEvents","icon","borderStar","SolidStar","solidStar","DeleteButton","deleteButton","List","listStyle","ListItem","favorite","needFav","favFunc","delFunc","border","GroceryList","groceryList","setGroceryList","useEffect","getList","groceryListArray","grocerySet","Set","delFunction","getAttribute","SavedRecipe","recipeList","setRecipeList","favRecipeList","setFavRecipeList","getRecipes","favoritesList","handleRecipeClick","favFunction","deleteFunction","_id","App","exact","path","component","HomePage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1ffec86c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../../utils/refreshToken';\n\nconst clientId =\n  '659871250507-bokvnt4700ki1lu59kp9h50ccro3g721.apps.googleusercontent.com';\n\nfunction Login() {\n  const onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    alert(\n      `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n    );\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    alert(\n      `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\n    );\n  };\n\n  return (\n    <div>\n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        style={{ marginTop: '100px' }}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Login;","export const refreshTokenSetup = (res) => {\n    // Timing to renew access token\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n  \n    const refreshToken = async () => {\n      const newAuthRes = await res.reloadAuthResponse();\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n      console.log('newAuthRes:', newAuthRes);\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\n      localStorage.setItem('authToken', newAuthRes.id_token);\n  \n      // Setup the other timer after the first one\n      setTimeout(refreshToken, refreshTiming);\n    };\n  \n    // Setup first refresh timer\n    setTimeout(refreshToken, refreshTiming);\n  };","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nconst clientId =\n  '659871250507-bokvnt4700ki1lu59kp9h50ccro3g721.apps.googleusercontent.com';\n\nfunction Logout() {\n  const onSuccess = () => {\n    console.log('Logout made successfully');\n    alert('Logout made successfully ✌');\n  };\n\n  return (\n    <div>\n      <GoogleLogout\n        clientId={clientId}\n        buttonText=\"Logout\"\n        onLogoutSuccess={onSuccess}\n      ></GoogleLogout>\n    </div>\n  );\n}\n\nexport default Logout;","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Login from \"../../components/GoogleAuth/Login\";\nimport Logout from \"../../components/GoogleAuth/Logout\";\nimport \"../../styles/Nav.css\";\n\nfunction NavTabs() {\n  // We'll go into the Hooks API later, for now, we are just using some code\n  // from the react-router docs (https://reacttraining.com/react-router/web/api/Hooks/uselocation)\n  // This allows the component to check the route any time the user uses a link to navigate.\n  const location = useLocation();\n\n  return (\n    <div className=\"navBar container grid-cols-12 py-5\">\n      <span className=\"bg-transparent hover:bg-green-300 rounded font-bold text-xl mx-6 px-5 py-4\">\n        <Link\n          to=\"/\"\n          className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Home\n        </Link>\n      </span>\n      <span className=\"bg-transparent hover:bg-green-300 rounded font-bold text-xl mx-6 px-5 py-5\">\n        <Link\n          to=\"/NewRecipe\"\n          className={\n            location.pathname === \"/NewRecipe\" ? \"nav-link active\" : \"nav-link\"\n          }\n        >\n          New Recipe\n        </Link>\n      </span>\n      <span className=\"bg-transparent hover:bg-green-300 rounded font-bold text-xl mx-6 px-5 py-5\">\n        <Link\n          to=\"/SavedRecipe\"\n          className={\n            location.pathname === \"/SavedRecipe\"\n              ? \"nav-link active\"\n              : \"nav-link\"\n          }\n        >\n          My Recipes\n        </Link>\n      </span>\n      <span className=\"bg-transparent hover:bg-green-300 rounded font-bold text-xl  mx-6 px-5 py-5\">\n        <Link\n          to=\"/GroceryList\"\n          className={\n            location.pathname === \"/GroceryList\"\n              ? \"nav-link active\"\n              : \"nav-link\"\n          }\n        >\n          Grocery List\n        </Link>\n      </span>\n      <div className=\"flex justify-end -my-8\">\n        <span className=\"LogInOUT\">\n          <Login className=\"\"></Login>\n        </span>\n        <span className=\"LogInOUT\">\n          <Logout className=\"\"></Logout>\n        </span>\n      </div>\n      <h1 className=\"title text-green-500 text-6xl p-20 subpixel-antialiased\">\n        Quick-List\n      </h1>\n    </div>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\n\nexport const Dropdown = ({ value, defaultText, name, onChange, children }) => {\n  return (\n    <select className=\"rounded\" name={name} onChange={onChange} value={value}>\n      <option value=\"default\" disabled hidden>\n        Choose {defaultText}\n      </option>\n      {children}\n    </select>\n  );\n};\n\nexport const DropdownOptions = ({ value }) => {\n  return <option value={value}>{value}</option>;\n};\n","import React from \"react\";\n\nconst InputBar = ({ name, onChange }) => {\n  return (\n    <input\n      className=\"border-gray-300 rounded \"\n      name={name}\n      onChange={onChange}\n    ></input>\n  );\n};\n\nexport default InputBar;\n","import React from \"react\";\n\nconst Button = ({ name, onClick, text, disabled }) => {\n  return (\n    <div className=\"container my-5\">\n      <button\n        className=\"bg-green-500 hover:bg-green-300 text-white px-2 py-2 font-bold center rounded\"\n        name={name}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        {text}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import axios from \"axios\";\n\nexport default {\n  //Get route for ingredient type list\n  ingredientTypeList: function () {\n    return axios.get(\"/api/types/all\");\n  },\n  //Get route for ingredients based on type selected\n  ingredientMatchList: function (type) {\n    return axios.post(\"/api/types/match\", type);\n  },\n  //Get route for grocery list\n  getGroceryList: function () {\n    return axios.get(\"/api/groceryList/all\");\n  },\n  //Post route for grocery list\n  addToGroceryList: function (ingredientsArray) {\n    return axios.post(\"/api/groceryList/add\", ingredientsArray);\n  },\n  //Delete for grocery list item\n  deleteGroceryItem: function (itemName) {\n    return axios.delete(\"/api/groceryList/\" + itemName);\n  },\n  //Clear grocery list\n  clearList: function () {\n    return axios.delete(\"/api/groceryList/clear/list\");\n  },\n  //Get route for recipe list\n  recipeList: function () {\n    return axios.get(\"/api/recipes/all\");\n  },\n  //Get route for specific recipe\n  getRecipe: function (recipeID) {\n    return axios.get(\"/api/recipes/\" + recipeID);\n  },\n  //Post route for recipe\n  newRecipe: function (recipe) {\n    return axios.post(\"/api/recipes/new\", recipe);\n  },\n  //Update to add recipe to favorites\n  updateFav: function (recipeID) {\n    return axios.put(\"/api/recipes/\" + recipeID);\n  },\n  //Delete for recipe list\n  deleteRecipe: function (recipeID) {\n    return axios.delete(\"/api/recipes/\" + recipeID);\n  },\n  //Post route for ingredient\n  newIngredient: function (ingredient) {\n    return axios.post(\"/api/ingredient/new\", ingredient);\n  },\n\n  //Post for user login?\n};\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","//Import React, useState, and necessary components.\nimport React, { useState, useReducer } from \"react\";\nimport { Dropdown, DropdownOptions } from \"../components/Dropdown/Dropdown\";\nimport InputBar from \"../components/Input/Input\";\nimport Button from \"../components/Button/Button\";\nimport API from \"../utils/API\";\nimport history from \"../utils/history\";\nimport \"../styles/NewRecipe.css\";\n\n//Create page component\nconst NewRecipe = () => {\n  //State for ingredient\n  const [ingredient, setIngredient] = useState({});\n\n  //State for recipe\n  const [recipeState, setRecipeState] = useState({});\n\n  //Page state\n  const [pageState, setPageState] = useState({});\n\n  //Ingredients array\n  const [ingredientsArray, setIngredientsArray] = useState([]);\n\n  //State for first dropdown array\n  const [typeSelectArray, setTypeSelectArray] = useState([]);\n\n  //Dropdown State\n  const [dropdownState, setDropdownState] = useState({\n    first: \"default\",\n    second: \"default\",\n  });\n\n  //State for second dropdown array\n  const [ingredSelectArray, dispatch] = useReducer((state, action) => {\n    setDropdownState({ ...dropdownState, second: \"default\" });\n    state = [];\n    action[0].ingredientMatch.map((item) => {\n      return state.push(item.name);\n    });\n    state.unshift(\"Create New\");\n    return state;\n  }, []);\n\n  //Function for button clicks\n  const submitFunction = (event) => {\n    //Prevents page reload\n    event.preventDefault();\n    //Deconstructs target and gets button name\n    const { name } = event.target;\n    //Switch case based on name\n    switch (name) {\n      case \"addIngredient\":\n        //Adds to ingredients array used for completed recipe\n        if (ingredient.ingredientName) {\n          setIngredientsArray((previousState) => [\n            ...previousState,\n            ingredient.ingredientName,\n          ]);\n        }\n        //Pushes new ingredient to database\n        if (ingredient.new) {\n          API.newIngredient({\n            type: ingredient.type,\n            name: ingredient.ingredientName,\n          })\n            .then((res) => {})\n            .catch((err) => {\n              if (err) {\n                console.log(err);\n              }\n            });\n        }\n        //Reset PageState object\n        setIngredient({});\n        setPageState({});\n        setDropdownState({ first: \"default\", second: \"default\" });\n        break;\n      case \"addNewRecipe\":\n        ////To slow to work(Ask question)\n        setIngredientsArray((previousState) => [\n          ...previousState,\n          ingredient.ingredientName,\n        ]);\n        //Post new recipe to database\n        API.newRecipe({\n          name: recipeState.name,\n          ingredients: ingredientsArray,\n        })\n          .then((res) => {})\n          .catch((err) => {\n            if (err) {\n              console.log(err);\n            }\n          });\n        //Reset states of recipe and ingredient\n        setPageState({});\n        setRecipeState({});\n        setIngredientsArray([]);\n        setIngredient({});\n        break;\n      case \"recipeName\":\n        //Sets the recipe name with the state changed by the input\n        setRecipeState({ name: pageState.recipeName });\n        API.ingredientTypeList()\n          .then((res) => {\n            const tempSelectArray = res.data.map((type) => type.type);\n            setTypeSelectArray(tempSelectArray);\n          })\n          .catch((err) => console.log(err));\n        break;\n      case \"completeToGroceryList\":\n        ////To slow to work(Ask question)\n        setIngredientsArray((previousState) => [\n          ...previousState,\n          ingredient.ingredientName,\n        ]);\n\n        API.addToGroceryList(ingredientsArray)\n          .then((res) => {})\n          .catch((err) => console.log(err));\n        //Post new recipe to database\n        API.newRecipe({\n          name: recipeState.name,\n          ingredients: ingredientsArray,\n        })\n          .then((res) => {})\n          .catch((err) => {\n            if (err) {\n              console.log(err);\n            }\n          });\n        //Reset states of recipe and ingredient\n        setPageState({});\n        setRecipeState({});\n        setIngredientsArray([]);\n        setIngredient({});\n\n        history.push(\"/GroceryList\");\n        refreshPage();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  //Function to handle dropdown changes\n  const handleSelectChange = (event) => {\n    //Deconstructs event.target object\n    const { name, value } = event.target;\n    //Switch case for dropdown\n    switch (name) {\n      case \"type\":\n        setIngredient({ [name]: value });\n        setDropdownState({ ...dropdownState, first: value });\n        API.ingredientMatchList({ [name]: value }).then((res) => {\n          const selectIngredientArray = res.data.filter(\n            (item) => item.type === value\n          );\n          dispatch(selectIngredientArray);\n        });\n        break;\n      case \"ingredientName\":\n        if (value === \"Create New\") {\n          setPageState({ ...pageState, [name]: \"Placeholder\" });\n        } else {\n          setPageState({ ...pageState, [name]: \"\" });\n          setIngredient({ ...ingredient, [name]: value });\n          setDropdownState({ ...dropdownState, second: value });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  //Function to handle input changes\n  const handleInputChange = (event) => {\n    //Deconstructs event.target object\n    const { name, value } = event.target;\n    //Switch case for name\n    switch (name) {\n      //First input entry. Recipe name\n      case \"recipeName\":\n        //Sets a temporary state to be transferred on submit\n        setPageState({ recipeName: value });\n        break;\n      case \"ingredientName\":\n        setIngredient({ ...ingredient, [name]: value, new: true });\n        break;\n      default:\n        break;\n    }\n  };\n\n  //Return for the page\n  return (\n    <div className=\"recipeform\">\n      <form onSubmit={submitFunction}>\n        {recipeState.name ? (\n          <div>\n            <p>{recipeState.name}</p>\n            <Dropdown\n              name=\"type\"\n              onChange={handleSelectChange}\n              defaultText=\"Type\"\n              value={dropdownState.first}\n            >\n              {typeSelectArray.map((item, index) => (\n                <DropdownOptions value={item} key={index} />\n              ))}\n            </Dropdown>\n          </div>\n        ) : (\n          <InputBar name=\"recipeName\" onChange={handleInputChange} />\n        )}\n        {ingredient.type && (\n          <div>\n            <Dropdown\n              name=\"ingredientName\"\n              onChange={handleSelectChange}\n              defaultText=\"Ingredient\"\n              value={dropdownState.second}\n            >\n              {ingredSelectArray.map((item, index) => (\n                <DropdownOptions value={item} key={index} />\n              ))}\n            </Dropdown>\n          </div>\n        )}\n        {pageState.ingredientName === \"Placeholder\" && (\n          <InputBar name=\"ingredientName\" onChange={handleInputChange} />\n        )}\n        {recipeState.name ? (\n          <div>\n            <Button\n              name=\"addIngredient\"\n              onClick={submitFunction}\n              text=\"Add Ingredient\"\n            />\n            <Button\n              name=\"addNewRecipe\"\n              onClick={submitFunction}\n              text=\"Add New Recipe\"\n              disabled={\n                ingredientsArray.length < 1 ||\n                Object.keys(ingredient).length > 0\n              }\n            />\n            <Button\n              name=\"completeToGroceryList\"\n              onClick={submitFunction}\n              text=\"Save & Add To List\"\n              disabled={\n                ingredientsArray.length < 1 ||\n                Object.keys(ingredient).length > 0\n              }\n            />\n          </div>\n        ) : (\n          <div>\n            <Button\n              name=\"recipeName\"\n              onClick={submitFunction}\n              text=\"Submit Recipe Name\"\n            />\n          </div>\n        )}\n      </form>\n      {ingredientsArray.map((item, index) => (\n        <p key={index}>{item}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default NewRecipe;\n\n//Notes from Tyler\n// {\n//   !apiArray.length\n//     ? test2.map((item, index) => <DropdownOptions value={item} key={index} />)\n//     : apiArray.map((item, index) => (\n//         <DropdownOptions value={item} key={index} />\n//       ));\n// }\n// useEffect(() => {\n//   //do your api call\n// }, [apiArray]);\n\n//Test variable will be deleted.\n// const test = [\"Grain\", \"Vegetable\", \"Meat\", \"Dairy\", \"Fruit\", \"Other\"];\n// const test2 = [\"Create New\", \"More\"];\n// const test3 = [\"Something\", \"More\"];\n","import React from \"react\";\n\nimport \"../styles/Home.css\";\nimport { Link, Route } from \"react-router-dom\";\n\nfunction Home(props) {\n  {\n    console.log(\"props:\", props);\n  }\n  return (\n    <div className=\"article homeBackground\">\n      <br className=\"\"></br>\n      <h2 className=\"aside main\">Enter ingredients to your favorite meals! </h2>\n      <h2 className=\"aside\">Have them stored to select at anytime! </h2>\n      <h2 className=\"aside\">Have a Grocery List in just a few Clicks! </h2>\n\n      <p>\n        It is a long established fact that a reader will be distracted by the\n        readable content of a page when looking at its layout. The point of\n        using Lorem Ipsum is that it has a more-or-less normal distribution of\n        letters, as opposed to using 'Content here, content here', making it\n        look like readable English. Many desktop publishing packages and web\n        page editors now use Lorem Ipsum as their default model text, and a\n        search for 'lorem ipsum' will uncover many web sites still in their\n        infancy. Various versions have evolved over the years, sometimes by\n        accident, sometimes on purpose (injected humour and the like).\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar as borderStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { faStar as solidStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrashAlt as deleteButton } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const BorderStar = ({ onClick, value }) => {\n  return (\n    <span onClick={onClick} value={value}>\n      <FontAwesomeIcon\n        className=\"icon star\"\n        style={{ pointerEvents: \"none\" }}\n        icon={borderStar}\n      />\n    </span>\n  );\n};\n\nexport const SolidStar = ({ onClick, value }) => {\n  return (\n    <span onClick={onClick} value={value}>\n      <FontAwesomeIcon\n        className=\"icon star\"\n        style={{ pointerEvents: \"none\" }}\n        icon={solidStar}\n      />\n    </span>\n  );\n};\n\nexport const DeleteButton = ({ onClick, value }) => {\n  return (\n    <span onClick={onClick} value={value}>\n      <FontAwesomeIcon\n        className=\"icon delete\"\n        style={{ pointerEvents: \"none\" }}\n        icon={deleteButton}\n      />\n    </span>\n  );\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport {\n  BorderStar,\n  SolidStar,\n  DeleteButton,\n} from \"../../components/FontAwesome/FontAwesome\";\n\nexport function List({ children }) {\n  return <ul style={{ listStyle: \"none\" }}>{children}</ul>;\n}\n\nexport function ListItem({\n  name,\n  value,\n  favorite,\n  onClick,\n  needFav,\n  favFunc,\n  delFunc,\n}) {\n  return (\n    <div style={{ border: \"solid 1px black\" }}>\n      <li value={value} onClick={onClick}>\n        {name}\n      </li>\n      {needFav ? (\n        !favorite ? (\n          <BorderStar value={value} onClick={favFunc} />\n        ) : (\n          <SolidStar value={value} onClick={favFunc} />\n        )\n      ) : null}\n      <DeleteButton onClick={delFunc} value={value} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { List, ListItem } from \"../components/List/List\";\nimport Button from \"../components/Button/Button\";\nimport API from \"../utils/API\";\n\nconst GroceryList = () => {\n  const [groceryList, setGroceryList] = useState([]);\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = () => {\n    API.getGroceryList()\n      .then((res) => {\n        const groceryListArray = res.data.map((item) => {\n          return item.name;\n        });\n        const grocerySet = [...new Set(groceryListArray)];\n        setGroceryList(grocerySet);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const delFunction = (event) => {\n    console.log(event.target.getAttribute(\"value\"));\n    API.deleteGroceryItem(event.target.getAttribute(\"value\"))\n      .then((res) => {\n        getList();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const clearList = (event) => {\n    API.clearList()\n      .then((res) => {\n        getList();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <List>\n        {groceryList.map((item, index) => (\n          <ListItem\n            name={item}\n            value={item}\n            key={index}\n            delFunc={delFunction}\n          />\n        ))}\n      </List>\n      <Button name=\"deleteAll\" onClick={clearList} text=\"Clear List\" />\n    </div>\n  );\n};\n\nexport default GroceryList;\n","import { set } from \"mongoose\";\nimport React, { useState, useEffect } from \"react\";\nimport { List, ListItem } from \"../components/List/List\";\nimport API from \"../utils/API\";\n\nconst SavedRecipe = () => {\n  const [recipeList, setRecipeList] = useState([]);\n  const [favRecipeList, setFavRecipeList] = useState([]);\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const getRecipes = () => {\n    API.recipeList()\n      .then((res) => {\n        const favoritesList = res.data.filter((recipe) => {\n          if (recipe.favorite) {\n            return recipe;\n          }\n        });\n\n        setFavRecipeList(favoritesList);\n        setRecipeList(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleRecipeClick = (event) => {\n    const recipeID = event.target.getAttribute(\"value\");\n    API.getRecipe(recipeID)\n      .then((res) => {\n        API.addToGroceryList(res.data.ingredients)\n          .then((data) => {})\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const favFunction = (event) => {\n    API.updateFav(event.target.getAttribute(\"value\"))\n      .then((res) => {\n        getRecipes();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteFunction = (event) => {\n    API.deleteRecipe(event.target.getAttribute(\"value\"))\n      .then((res) => {\n        getRecipes();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <List>\n        {favRecipeList.map((recipe) => (\n          <ListItem\n            name={recipe.name}\n            data={recipe.ingredients}\n            key={recipe._id}\n            value={recipe._id}\n            onClick={handleRecipeClick}\n            favorite={recipe.favorite}\n            needFav=\"true\"\n            favFunc={favFunction}\n            delFunc={deleteFunction}\n          />\n        ))}\n      </List>\n      <List>\n        {recipeList.map((recipe) => (\n          <ListItem\n            name={recipe.name}\n            data={recipe.ingredients}\n            key={recipe._id}\n            value={recipe._id}\n            onClick={handleRecipeClick}\n            favorite={recipe.favorite}\n            needFav=\"true\"\n            favFunc={favFunction}\n            delFunc={deleteFunction}\n          />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default SavedRecipe;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavTabs from \"./components/Nav/Nav\";\nimport NewRecipe from \"./pages/NewRecipe\";\nimport HomePage from \"./pages/Home\";\nimport GroceryList from \"./pages/GroceryList\";\nimport SavedRecipe from \"./pages/SavedRecipe\";\nimport history from \"./utils/history\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       {/* <NewRecipe /> */}\n//       <HomePage />\n//       <Signup />\n//     </div>\n//   );\n// }\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <div>\n        <NavTabs />\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/SavedRecipe\" component={SavedRecipe} />\n        <Route path=\"/NewRecipe\" component={NewRecipe} />\n        <Route path=\"/GroceryList\" component={GroceryList} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}